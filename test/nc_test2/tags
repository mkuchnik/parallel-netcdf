!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.2.2	//
FUZZ	util.c	311;"	d	file:
NC_TEST	nc_test.c	78;"	d	file:
att_len	nc_test.c	/^size_t att_len[NVARS][MAX_NATTS];$/;"	v
att_name	nc_test.c	/^char att_name[NVARS][MAX_NATTS][2];$/;"	v
att_type	nc_test.c	/^ncmpi_type att_type[NVARS][NGATTS];$/;"	v
char2type	util.c	/^char2type(char letter) {$/;"	f	file:
check_atts	util.c	/^check_atts(int  ncid) $/;"	f
check_dims	util.c	/^check_dims(int  ncid)$/;"	f
check_file	util.c	/^check_file(char *filename) $/;"	f
check_vars	util.c	/^check_vars(int  ncid)$/;"	f
comm	nc_test.c	/^MPI_Comm comm = MPI_COMM_WORLD; \/* mpi communicator for parallel-netcdf *\/$/;"	v
create_file	nc_test.c	/^int  create_file;	\/* if 1, create file test.nc *\/$/;"	v
dbl2nc	util.c	/^int dbl2nc ( const double d, const ncmpi_type datatype, void *p)$/;"	f
def_dims	util.c	/^def_dims(int ncid)$/;"	f
def_vars	util.c	/^def_vars(int ncid)$/;"	f
dim_len	nc_test.c	/^size_t dim_len[NDIMS];$/;"	v
dim_name	nc_test.c	/^char dim_name[NDIMS][3];$/;"	v
equal	util.c	/^equal($/;"	f
error	error.c	/^error(const char *fmt, ...)$/;"	f
fromMixedBase	util.c	/^fromMixedBase($/;"	f
gatt_len	nc_test.c	/^size_t gatt_len[NGATTS];$/;"	v
gatt_name	nc_test.c	/^char gatt_name[NGATTS][3];$/;"	v
gatt_type	nc_test.c	/^ncmpi_type gatt_type[NGATTS];$/;"	v
hash	util.c	/^hash( const ncmpi_type type, const int rank, const size_t *index ) $/;"	f
hash4	util.c	/^hash4($/;"	f
ifFail	error.c	/^ifFail(const int expr, const int line, const char *file)$/;"	f
inRange	util.c	/^inRange(const double value, const ncmpi_type datatype)$/;"	f
inRange3	util.c	/^inRange3($/;"	f
inRange_float	util.c	/^inRange_float(const double value, const ncmpi_type datatype)$/;"	f
inRange_uchar	util.c	/^inRange_uchar(const double value, const ncmpi_type datatype)$/;"	f	file:
init_dims	util.c	/^init_dims(const char *digit)$/;"	f	file:
init_gatts	util.c	/^init_gatts(const char *type_letter)$/;"	f	file:
init_gvars	util.c	/^init_gvars (void)$/;"	f
int_vec_eq	util.c	/^int_vec_eq(const int *v1, const int *v2, const int n)$/;"	f
main	nc_test.c	/^main(int argc, char *argv[])$/;"	f
max_nmpt	nc_test.c	/^int  max_nmpt;		\/* max. number of messages per test *\/$/;"	v
nc2dbl	util.c	/^int nc2dbl ( const ncmpi_type datatype, const void *p, double *result)$/;"	f
nfails	nc_test.c	/^int  nfails;		\/* number of failures in specific test *\/$/;"	v
print	error.c	/^print(const char *fmt, ...)$/;"	f
print_n_size_t	error.c	/^print_n_size_t(size_t nelems, const size_t *array)$/;"	f
print_nok	util.c	/^print_nok(int nok)$/;"	f
product	util.c	/^product(size_t nn, const size_t *sp)$/;"	f	file:
progname	nc_test.c	/^char *progname;$/;"	v
put_atts	util.c	/^put_atts(int ncid)$/;"	f
put_vars	util.c	/^put_vars(int ncid)$/;"	f
read_only	nc_test.c	/^int  read_only;		\/* if 1, don't try to change files *\/$/;"	v
roll	util.c	/^int roll( int n )$/;"	f
s_ncmpi_type	util.c	/^s_ncmpi_type(ncmpi_type type)$/;"	f
scratch	nc_test.c	/^char scratch[] = "scratch.nc";  \/* writable scratch file *\/$/;"	v
test_ncmpi_abort	test_write.c	/^test_ncmpi_abort(void)$/;"	f
test_ncmpi_close	test_read.c	/^test_ncmpi_close(void)$/;"	f
test_ncmpi_copy_att	test_write.c	/^test_ncmpi_copy_att(void)$/;"	f
test_ncmpi_create	test_write.c	/^test_ncmpi_create(void)$/;"	f
test_ncmpi_def_dim	test_write.c	/^test_ncmpi_def_dim(void)$/;"	f
test_ncmpi_def_var	test_write.c	/^test_ncmpi_def_var(void)$/;"	f
test_ncmpi_del_att	test_write.c	/^test_ncmpi_del_att(void)$/;"	f
test_ncmpi_enddef	test_write.c	/^test_ncmpi_enddef(void)$/;"	f
test_ncmpi_get_att	test_read.c	/^test_ncmpi_get_att(void)$/;"	f
test_ncmpi_get_var1	test_read.c	/^test_ncmpi_get_var1(void)$/;"	f
test_ncmpi_get_vara	test_read.c	/^test_ncmpi_get_vara(void)$/;"	f
test_ncmpi_get_varm	test_read.c	/^test_ncmpi_get_varm(void)$/;"	f
test_ncmpi_get_vars	test_read.c	/^test_ncmpi_get_vars(void)$/;"	f
test_ncmpi_inq	test_read.c	/^test_ncmpi_inq(void)$/;"	f
test_ncmpi_inq_att	test_read.c	/^test_ncmpi_inq_att(void)$/;"	f
test_ncmpi_inq_attid	test_read.c	/^test_ncmpi_inq_attid(void)$/;"	f
test_ncmpi_inq_attlen	test_read.c	/^test_ncmpi_inq_attlen(void)$/;"	f
test_ncmpi_inq_attname	test_read.c	/^test_ncmpi_inq_attname(void)$/;"	f
test_ncmpi_inq_atttype	test_read.c	/^test_ncmpi_inq_atttype(void)$/;"	f
test_ncmpi_inq_dim	test_read.c	/^test_ncmpi_inq_dim(void)$/;"	f
test_ncmpi_inq_dimid	test_read.c	/^test_ncmpi_inq_dimid(void)$/;"	f
test_ncmpi_inq_dimlen	test_read.c	/^test_ncmpi_inq_dimlen(void)$/;"	f
test_ncmpi_inq_dimname	test_read.c	/^test_ncmpi_inq_dimname(void)$/;"	f
test_ncmpi_inq_natts	test_read.c	/^test_ncmpi_inq_natts(void)$/;"	f
test_ncmpi_inq_ndims	test_read.c	/^test_ncmpi_inq_ndims(void)$/;"	f
test_ncmpi_inq_nvars	test_read.c	/^test_ncmpi_inq_nvars(void)$/;"	f
test_ncmpi_inq_unlimdim	test_read.c	/^test_ncmpi_inq_unlimdim(void)$/;"	f
test_ncmpi_inq_var	test_read.c	/^test_ncmpi_inq_var(void)$/;"	f
test_ncmpi_inq_vardimid	test_read.c	/^test_ncmpi_inq_vardimid(void)$/;"	f
test_ncmpi_inq_varid	test_read.c	/^test_ncmpi_inq_varid(void)$/;"	f
test_ncmpi_inq_varname	test_read.c	/^test_ncmpi_inq_varname(void)$/;"	f
test_ncmpi_inq_varnatts	test_read.c	/^test_ncmpi_inq_varnatts(void)$/;"	f
test_ncmpi_inq_varndims	test_read.c	/^test_ncmpi_inq_varndims(void)$/;"	f
test_ncmpi_inq_vartype	test_read.c	/^test_ncmpi_inq_vartype(void)$/;"	f
test_ncmpi_open	test_read.c	/^test_ncmpi_open(void)$/;"	f
test_ncmpi_put_att	test_write.c	/^test_ncmpi_put_att(void)$/;"	f
test_ncmpi_put_var1	test_write.c	/^test_ncmpi_put_var1(void)$/;"	f
test_ncmpi_put_vara	test_write.c	/^test_ncmpi_put_vara(void)$/;"	f
test_ncmpi_put_varm	test_write.c	/^test_ncmpi_put_varm(void)$/;"	f
test_ncmpi_put_vars	test_write.c	/^test_ncmpi_put_vars(void)$/;"	f
test_ncmpi_redef	test_write.c	/^test_ncmpi_redef(void)$/;"	f
test_ncmpi_rename_att	test_write.c	/^test_ncmpi_rename_att(void)$/;"	f
test_ncmpi_rename_dim	test_write.c	/^test_ncmpi_rename_dim(void)$/;"	f
test_ncmpi_rename_var	test_write.c	/^test_ncmpi_rename_var(void)$/;"	f
test_ncmpi_set_fill	test_write.c	/^test_ncmpi_set_fill(void)$/;"	f
test_ncmpi_strerror	test_read.c	/^test_ncmpi_strerror(void)$/;"	f
test_ncmpi_sync	test_write.c	/^test_ncmpi_sync(void)$/;"	f
testfile	nc_test.c	/^char testfile[] = "test.nc";    \/* read-only testfile *\/$/;"	v
toMixedBase	util.c	/^toMixedBase($/;"	f
usage	nc_test.c	/^usage(void)$/;"	f	file:
var_dimid	nc_test.c	/^int var_dimid[NVARS][MAX_RANK];$/;"	v
var_name	nc_test.c	/^char var_name[NVARS][2+MAX_RANK];$/;"	v
var_natts	nc_test.c	/^size_t var_natts[NVARS];$/;"	v
var_nels	nc_test.c	/^size_t var_nels[NVARS];$/;"	v
var_rank	nc_test.c	/^size_t var_rank[NVARS];$/;"	v
var_shape	nc_test.c	/^size_t var_shape[NVARS][MAX_RANK];$/;"	v
var_type	nc_test.c	/^ncmpi_type var_type[NVARS];$/;"	v
verbose	nc_test.c	/^int  verbose;		\/* if 1, print details of tests *\/$/;"	v
write_file	util.c	/^write_file(char *filename) $/;"	f
