#
#  Copyright (C) 2003, Northwestern University and Argonne National Laboratory
#  See COPYRIGHT notice in top-level directory.
#
#  $Id$

srcdir = @srcdir@
VPATH  = @srcdir@

include ../../macros.make

INCLUDES  = -I../../src/lib -I$(srcdir)/../common
FPPFLAGS += -I../../src/libf
LDFLAGS  += -L../../src/lib
LIBS     += -lpnetcdf

C_SRCS   = ncmpi_vars_null_stride.c \
           vectors.c \
           bigrecords.F \
           collective_error.c \
           test_varm.c \
           alignment_test.c

CXX_SRCS = redef1.cpp

F_SRCS   = bigrecords.F

PROGS    = $(C_SRCS:.c=)
OBJS     = $(C_SRCS:.c=.o)
ifeq (@has_mpicxx@, yes)
PROGS   += $(CXX_PROGS:.cpp=)
OBJS    += $(CXX_PROGS:.cpp=.o)
endif

ifeq (@has_fortran@, yes)
PROGS   += $(F_SRCS:.F=)
OBJS    += $(F_SRCS:.F=.o)
endif

GARBAGE      = $(PROGS) *.nc
PACKING_LIST = $(C_SRCS) $(F_SRCS) $(CXX_SRCS) Makefile.in \
               geopotential.ncdump \
               redef-good.ncdump \
               interop1.sh \
               redef1.sh

all: $(PROGS)

ncmpi_vars_null_stride: ncmpi_vars_null_stride.o $(LIBRARY)
	$(LINK.c) $< $(LDFLAGS) $(LIBS)

vectors: vectors.o $(LIBRARY)
	$(LINK.c) $< $(LDFLAGS) $(LIBS)

bigrecords: bigrecords.o $(LIBRARY)
	$(LINK.F) $< $(LDFLAGS) $(LIBS)

redef1: redef1.o $(LIBRARY)
	$(LINK.cxx) $< $(LDFLAGS) $(LIBS)

collective_error: collective_error.o $(LIBRARY)
	$(LINK.c) $< $(LDFLAGS) $(LIBS)

test_varm: test_varm.o $(LIBRARY)
	$(LINK.c) $< $(LDFLAGS) $(LIBS)

alignment_test: alignment_test.o $(LIBRARY)
	$(LINK.c) $< $(LDFLAGS) $(LIBS)

test: ncmpi_vars_null_stride vectors test_varm alignment_test
	./ncmpi_vars_null_stride test.nc && echo '*** ncmpi_vars_null_stride: Success ***'
	./vectors && echo '*** vectors: Success ***'
	./test_varm && echo '*** test_varm: Success ***'
	./alignment_test testfile.nc && echo '*** alignment_test: Success ***'

testing-cxx: redef1
	$(srcdir)/redef1.sh ./redef1  $(srcdir)/redef-good.ncdump && echo '*** redef1: Success ***'

verbose_testing-cxx: testing-cxx

testing-f: bigrecords
	./bigrecords && echo '*** bigrecords: Success ***'

verbose_testing-f: testing-f

testing-collective_error:
	echo "please run with 2 processes. e.g. mpiexec -n 2 collective_error"

testing: test

include $(srcdir)/../../rules.make

