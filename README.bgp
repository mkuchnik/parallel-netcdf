# $Id$
# Building parallel-netcdf on BGP

Building for BGP is not so different from BGL: front end node is still a cross
compile host for the back end.  

Be sure to run configure with the --build and --host flags to put it in "cross
compile mode".  This will make configure use compile-only tests, insted of the
usual compile-and-run tests (running tests on the bgp login node won't work as
the compute nodes are totaly different).

There is one run-time check for MPI-IO support of resized types. Unfortunately
we have to test for this with a runtime test, but you can set the environemtn
variable "ac_cv_MPI_TYPE_RESIZED_WORKS" . 

./configure --host powerpc-bgp-linux --build powerpc64-suse-linux \
            --with-mpi=/bgsys/drivers/ppcfloor/comm

It's possible to build pnetcdf with the IBM xl compilers:

./configure --host powerpc-bgp-linux --build powerpc64-suse-linux \
            --with-mpi=/bgsys/drivers/ppcfloor/comm/xl \
            MPICC=mpixlc MPICXX=mpixlcxx MPIF77=mpixlf77 MPIF90=mpixlf90 \
            FFLAGS="-qsuppress=cmpmsg" FCFLAGS="-qsuppress=cmpmsg"

Fortran flag "-qsuppress=cmpmsg" can suppresses XLF compile informational
messages that report compilation progress and a successful completion.

As far as we know, there are no issues with pnetcdf on BGP, but should you
find any, email parallel-netcdf@mcs.anl.gov

----
Note on compiling Fortran 90 programs on Intrepid @ ANL
----
https://www.alcf.anl.gov/user-guides/bgp-faqs-compiling-and-linking#how-do-i-use-xlf-and-"use-mpi"

If you attempt to do a "use mpi" from XL Fortran, and build with the default
compiler wrappers, you will encounter this error:

  XL Fortran90 error: Module symbol file for module mpi is in a format not
recognized by this compiler

The cause of the error is that the mpi.mod referenced in the "default" software
stack (/bgsys/drivers/ppcfloor/comm/default) is built with GNU Fortran.

A work-around to the problem using mpif.h instead of "use mpi.mod", e.g.:

program test
include "mpif.h"

... your MPI stuff ...

end program test

The proper solution is to use an alternate software stack with MPI built using
the XL compilers instead of the GNU compilers, thus containing a Fortran mpi
module (mpi.mod) generated by XLF. This software stack was introduced in
V1R4M1. You may build with it using the wrappers in comm/xl:

 /bgsys/drivers/ppcfloor/comm/xl/bin/mpixlf90

