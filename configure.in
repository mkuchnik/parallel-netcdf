AC_REVISION($Id$)dnl
dnl -*- Mode: shell-script-mode; -*-
dnl Process this file with GNU autoconf(1) to produce a configure script.
dnl

dnl Defaults:
CPPFLAGS=${CPPFLAGS--DNDEBUG}
CFLAGS=${CFLAGS--O}
FPPFLAGS=${FPPFLAGS-}
FFLAGS=${FFLAGS-}

AC_INIT(src/lib/ncconfig.in)
UD_SRCDIR
AC_PREFIX_DEFAULT(`(cd ..; pwd)`)

AC_CONFIG_HEADER(src/lib/ncconfig.h:src/lib/ncconfig.in)

UD_PROG_M4
AC_PROG_CC
AC_PROG_CXX
dnl AC_PROG_F77
UC_PROG_FC
dnl UD_PROG_CC
UD_PROG_CC_MAKEDEPEND
dnl need a --with-cxx=no and --with-fortran=no
dnl UD_PROG_CXX
dnl UD_PROG_F90
# Checking for Fortran types also determines the Fortran name mangling
# and places the value into FCALLSCSUB as a the C name corresponding
# to the Fortran name SUB 
UD_CHECK_LIB_MATH
UD_PROG_AR()
UD_PROG_NM()
AC_PROG_RANLIB

#
# If we are building the Fortran interface, determine the correct name mapping
case $FCALLSCSUB in 
    SUB)
    AC_DEFINE(F77_NAME_UPPER,,[Define if Fortran names are uppercase])
    ;;
    sub_)
    # This is the hard case.  Gcc uses one _ unless the name includes
    # an underscore, in which case it gets two trailing underscores.
    # Use essentially the same configure code that the original configure
    # used to determine SUB
    AC_MSG_CHECKING(for C-equivalent to Fortran routine \"SUB_A\") 
	    cat >conftest.f <<\EOF
              call sub_a()
              end
EOF
	    doit='$FC -c ${FFLAGS} conftest.f'
	    if AC_TRY_EVAL(doit); then
		FCALLSCSUBA=`$NM $NMFLAGS conftest.o | awk '
		    /SUB_A_/{print "SUB_A_";exit}
		    /SUB_A/ {print "SUB_A"; exit}
                    /sub_a__/ {print "sub_a__"; exit}
		    /sub_a_/{print "sub_a_";exit}
		    /sub_a/ {print "sub_a"; exit}'`
		case "$FCALLSCSUBA" in
		    '') AC_MSG_ERROR(not found)
			;;
		    *)  AC_MSG_RESULT($FCALLSCSUBA)
			;;
		esac
	    else
		AC_MSG_ERROR(Could not compile conftest.f)
	    fi
	    rm -f conftest*
    case "$FCALLSCSUBA" in 
        sub_a__) 
	AC_DEFINE(F77_NAME_LOWER_2USCORE,,[Define if Fortran names are lower case with two trailing underscore2])
	;;
	sub_a_)    
	AC_DEFINE(F77_NAME_LOWER_USCORE,,[Define if Fortran names are lower case with one trailing underscore])
	;;
	*)
        AC_MSG_WARN([Unrecognized Fortran name mapping])
	;;
    esac	    
    ;;
    sub)
    AC_DEFINE(F77_NAME_LOWER,,[Define if Fortran names are lower case])
    ;;
    *)
    AC_MSG_WARN([Unrecognized Fortran name mapping])
    ;;
esac

MPICC=$CC
AC_MSG_CHECKING(mpi implementation)
AC_ARG_WITH(mpi, 
[  --with-mpi=/path/to/implementation
                          installation prefix for mpi implementation],
	if test x$withval = xyes; then
		AC_MSG_ERROR(--with-mpi must be given a pathname)
	else
		AC_MSG_RESULT(using $withval)
		MPICC=${withval}/bin/mpicc
		if test ! -x "${MPICC}"; then
			AC_MSG_WARN($MPICC either does not exist or is not executable: falling back to $CC)
			MPICC="$CC"
		fi
		MPIF77=${withval}/bin/mpif77
		if test ! -x "${MPIF77}"; then
			AC_MSG_WARN($MPIF77 either does not exist or is not executable: falling back to $FC)
			MPIF77="$FC"
		fi

	fi
)


AC_MSG_CHECKING(MPI-IO support in MPI implementation)
saveCC="$CC"
CC=$MPICC
AC_TRY_COMPILE([#include "mpi.h"], [int a = MPI_MODE_RDWR],
	AC_MSG_RESULT(yes),
	AC_MSG_ERROR([mpi implementation does not support MPI-IO])
)
CC="$saveCC"
AC_SUBST(MPICC)
AC_SUBST(MPIF77)

AC_CHECK_HEADER(stdlib.h, ,AC_DEFINE(NO_STDLIB_H))
AC_CHECK_HEADER(sys/types.h, ,AC_DEFINE(NO_SYS_TYPES_H))
AC_CHECK_FUNC(strerror, ,AC_DEFINE(NO_STRERROR))
UD_CHECK_FTRUNCATE
AC_FUNC_ALLOCA
AC_STRUCT_ST_BLKSIZE
UD_CHECK_IEEE
AC_TYPE_SIZE_T
AC_TYPE_OFF_T
AC_CHECK_TYPE(ssize_t, int)
AC_CHECK_TYPE(ptrdiff_t, int)
AC_CHECK_TYPE(uchar, unsigned char)
AC_C_CHAR_UNSIGNED
AC_C_BIGENDIAN
AC_CHECK_SIZEOF(short)
AC_CHECK_SIZEOF(int)
AC_CHECK_SIZEOF(long)
AC_CHECK_SIZEOF(float)
AC_CHECK_SIZEOF(double)
UD_CHECK_SIZEOF(off_t)
UD_CHECK_SIZEOF(size_t)
UD_FORTRAN_TYPES
UD_MAKEWHATIS
UD_FTPBINDIR
AC_OUTPUT(macros.make Makefile src/Makefile test/Makefile src/lib/Makefile src/libf/Makefile  test/common/Makefile test/test_double/Makefile test/test_double_int/Makefile test/test_float/Makefile test/test_int/Makefile test/nc_test/Makefile test/nf_test/Makefile)
