#
#  Copyright (C) 2012, Northwestern University and Argonne National Laboratory
#  See COPYRIGHT notice in top-level directory.
#
# $Id$

srcdir = @srcdir@
VPATH = @srcdir@

include ../macros.make

INCLUDES	= -I$(srcdir)/../src/lib -I../src/lib -I$(srcdir)

ld_math		= $(MATHLIB)

C_SRCS		= collective_write.c \
		  nonblocking_write.c \
		  get_info_c.c \
		  column_wise.c \
		  block_cyclic.c \
		  mput.c \
		  hints.c \
		  flex.c

F90_SRCS	= get_info_f.F90 \
                  put_vara.F \
                  flex_f.F

C_OBJS		= $(C_SRCS:.c=.o)
F90_OBJS	= $(F90_SRCS:.F90=.o)
F90FLAGS        = -I$(srcdir)/../src/libf -I../src/libf

PROGS		= collective_write nonblocking_write get_info_c column_wise block_cyclic mput hints flex
OBJS		= $(C_OBJS)
ifeq (@has_fortran@, yes)
PROGS		+= get_info_f put_vara flex_f
OBJS		+= $(F90_OBJS)
endif

GARBAGE         = $(PROGS)

ld_pnetcdf      = -L$(srcdir)/../src/lib -L../src/lib -lpnetcdf

PACKING_LIST	=  $(SRCS) \
		    Makefile.in

SUBDIRS = tutorial

all: $(PROGS)
	set -e; for i in $(SUBDIRS); do ( cd $$i && $(MAKE) ; ) ; done

install:

uninstall:

collective_write: collective_write.o
	$(LINK.c) $< $(ld_pnetcdf) $(ld_math) $(LIBS)

nonblocking_write: nonblocking_write.o
	$(LINK.c) $< $(ld_pnetcdf) $(ld_math) $(LIBS)

get_info_c: get_info_c.o
	$(LINK.c) $< $(ld_pnetcdf) $(ld_math) $(LIBS)

get_info_f.o: get_info_f.F90
	$(COMPILE.F90) $<

get_info_f: get_info_f.o
	$(LINK.F90) $< $(ld_pnetcdf) $(ld_math) $(LIBS)

column_wise: column_wise.o
	$(LINK.c) $< $(ld_pnetcdf) $(ld_math) $(LIBS)

block_cyclic: block_cyclic.o
	$(LINK.c) $< $(ld_pnetcdf) $(ld_math) $(LIBS)

put_vara.o: put_vara.F
	$(COMPILE.F90) $<

put_vara: put_vara.o
	$(LINK.F90) $< $(ld_pnetcdf) $(ld_math) $(LIBS)

mput: mput.o
	$(LINK.c) $< $(ld_pnetcdf) $(ld_math) $(LIBS)

hints: hints.o
	$(LINK.c) $< $(ld_pnetcdf) $(ld_math) $(LIBS)

flex: flex.o
	$(LINK.c) $< $(ld_pnetcdf) $(ld_math) $(LIBS)

flex_f.o: flex_f.F
	$(COMPILE.F90) $<

flex_f: flex_f.o
	$(LINK.F90) $< $(ld_pnetcdf) $(ld_math) $(LIBS)

include $(srcdir)/depend


clean:
	$(RM) -f *.o core* $(GARBAGE)
	set -e; for i in $(SUBDIRS); do ( cd $$i && $(MAKE) clean ; ) ; done

distclean:
	$(RM) -f *.o core* $(GARBAGE)
	set -e; for i in $(SUBDIRS); do ( cd $$i && $(MAKE) distclean ; ) ; done
	$(RM) -f Makefile
	if [ @srcdir@ != . ] ; then rmdir $(SUBDIRS) ; fi

