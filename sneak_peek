------------------------------------------------------------------------------
This is essentially a placeholder for the next release note ...
------------------------------------------------------------------------------

  o New features
    * A new configure option "--disable-in-place-swap" is added. It disables
      the byte swap operations running in-place on the user's write buffers.
      The purpose of providing this option is to solve the problem when a
      Fortran program uses a put buffer which is immutable, e.g. declared as
      a PARAMETER, and in-place byte swap on user buffer can cause segmentation
      fault. See discussion threads of
      http://lists.mcs.anl.gov/pipermail/parallel-netcdf/2013-July/001498.html

      Impacts:
      1. It takes effect only on Little Endian machines.
      2. It only affects put/iput data APIs, but not attribute APIs.
      3. The INTENT of put buffer arguments in Fortran 90 put/iput APIs will be
         declared as "IN". Without this setting, the default is "INOUT".
      4. It has an impact on performance, as an internal temporary buffer will
         be allocated to copy data over from user's put buffer, so byte-swap
         can be performed on the temporary buffer.

      The default setting is to enable in-place byte swap. PnetCDF tries not to
      allocate additional memory space, due to performance concern.

  o New APIs
    * ncmpi__enddef, nfmpi__enddef, and nf90mpi_enddef - these APIs correspond
      to netCDF nc__enddef, nf__enddef, and nf90_enddef (with additional
      optional arguments).

    * ncmpi_inq_file_info - the naming for ncmpi_get_file_info may cause
      confusion, as "get" has a different meaning on PnetCDF. The correct
      name should use "inq". However, ncmpi_get_file_info is kept for backward
      compatibility.

    * ncmpi_inq_striping, nfmpi_inq_striping, nf90mpi_inq_striping report the
      file system striping settings, striping size and count, if the underneath
      MPI-IO can find their values from the file system.

  o Syntax change for Fortran put APIs
    * 

  o New PnetCDF hint
    * 

  o New error code
    * 

  o New run-time environment variables
    * 

  o New example programs
    * 

  o New programs for I/O benchmarks
    * 

  o New test program
    * testcase/noclobber.c check if error code NC_EEXIST can be returned
      correctly when NC_NOCLOBBER modes is used in ncmpi_create and the file
      exists.

  o New optimization

  o Other updates:
    * Fix build target dependency for parallel make. Now parallel make. e.g.
      "make -j8" runs much faster on many platforms, including Cray and BGQ.

    * File create is revised for handling NC_CLOBBER and NC_NOCLOBBER modes.
      On systems where Unix calls access() and unlink() are available, they
      are used to check if a file exits and delete an existing file.
  o Bug fixes
    * 

